version: 2.1

orbs:
  node: circleci/node@4.7.0
  ruby: circleci/ruby@1.1.4

aliases:
  - &androidWorkspace
      ~/apps/android/LiveVideoApp

  - &gradle-cache-key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
  - &restore-cache-gradle
    <<: *gradle-cache-key
    name: Restore Gradle Cache
  - &save-cache-gradle
    <<: *gradle-cache-key
    name: Save Gradle Cache
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper

parameters:
  backend-updated:
    type: boolean
    default: false
  web-app-updated:
    type: boolean
    default: false
  ios-app-updated:
    type: boolean
    default: false
  android-app-updated:
    type: boolean
    default: false

executors:
  macos_executor:
    macos:
      xcode: "13.1.0"
  android_executor:
    parameters:
      resource-class:
        description: "Build executor resource class"
        default: "large"
        type: string
    working_directory: *androidWorkspace
    docker:
      - image: cimg/android:2021.10.2-node
    environment:
      _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"
    resource_class: << parameters.resource-class >>

jobs:
  build-and-test-ios-app:
    executor: macos_executor
    steps:
      - checkout
      - ruby/install-deps
      - run: 
          name: Configure Artifactory so private dependencies can be downloaded
          command: |
            chmod 600 .circleci/.netrc
            cp .circleci/.netrc ~/.netrc
            sed -i '' "s/ARTIFACTORY_USERNAME/${ARTIFACTORY_USERNAME}/g" ~/.netrc
            sed -i '' "s/ARTIFACTORY_API_KEY/${ARTIFACTORY_API_KEY}/g" ~/.netrc
      - run:
          name: Setup code signing
          command: |
            cd "apps/ios/LiveVideo"
            bundle exec fastlane ci_match_install
      - run:
          name: Build and test
          command: |
            cd "apps/ios/LiveVideo"
            bundle exec fastlane tests

  build-and-test-android-app:
    executor: android_executor
    steps:
      - checkout
      - run:
          name: Build All APKs
          command: ./gradlew -q app:assemble app:assembleDebugAndroidTest
      - run:
          name: Unit Tests
          command: ./gradlew app:testDebugUnitTest

workflows:
  build-and-test-web-app:
    when:
      or: [<< pipeline.parameters.backend-updated >>, << pipeline.parameters.web-app-updated >>]
    jobs:
      - node/run:
          npm-run: test:ci
          app-dir: 'apps/web'
  build-and-test-ios-app:
    when:
      or: [<< pipeline.parameters.backend-updated >>, << pipeline.parameters.ios-app-updated >>]
    jobs:
      - build-and-test-ios-app
  build-and-test-android-app:
    when:
      or: [<< pipeline.parameters.backend-updated >>, << pipeline.parameters.android-app-updated >>]
    jobs:
      - build-and-test-android-app
  build-and-test-backend:
    when: << pipeline.parameters.backend-updated >>
    jobs:
      - node/test
